'use client';

import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { 
  Github, 
  FileText, 
  Globe,
  Package,
  BookOpen,
  Folder
} from 'lucide-react';
import { Button } from '@/components/ui/button';
import { projects } from '@/data/projects';
import VSCodeEditor from '@/components/engineer-ui/VSCodeEditor';

// FileItemÂûã„ÇíÂÆöÁæ©
interface FileItem {
  id: string;
  name: string;
  type: 'file' | 'folder';
  icon: React.ComponentType<{ size?: number; className?: string }>;
  content?: React.ReactNode;
  extension?: string;
  children?: FileItem[];
}

export default function ProjectsSection() {
  const [isVisible, setIsVisible] = useState(false);
  const [currentVSCodeTab, setCurrentVSCodeTab] = useState('');

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
        }
      },
      { threshold: 0.1 }
    );

    const element = document.querySelector('#projects');
    if (element) observer.observe(element);

    return () => observer.disconnect();
  }, []);

  // „Éó„É≠„Ç∏„Çß„ÇØ„ÉàÊØé„ÅÆ„Éï„Ç°„Ç§„É´ÊßãÈÄ†„ÇíÁîüÊàê
  const generateProjectFiles = (): FileItem[] => {
    return projects.map(project => ({
      id: project.id,
      name: project.titleEn || project.title,
      type: 'folder' as const,
      icon: Folder,
      children: [
        {
          id: `${project.id}-readme`,
          name: 'README.md',
          type: 'file' as const,
          icon: FileText,
          extension: '.md',
          content: (
            <div className="p-6 text-gray-300 font-zen-maru">
              <h1 className="text-2xl font-bold text-white mb-6">{project.title}</h1>
              <div className="space-y-4">
                <div>
                  <h2 className="text-lg font-semibold text-blue-300 mb-2">üìñ Ê¶ÇË¶Å</h2>
                  <p className="leading-relaxed">{project.description}</p>
                </div>
                
                <div>
                  <h2 className="text-lg font-semibold text-blue-300 mb-2">üõ†Ô∏è ÊäÄË°ì„Çπ„Çø„ÉÉ„ÇØ</h2>
                  <div className="flex flex-wrap gap-2">
                    {project.technologies.map(tech => (
                      <span key={tech} className="px-2 py-1 bg-gray-700 rounded text-sm">
                        {tech}
                      </span>
                    ))}
                  </div>
                </div>

                <div>
                  <h2 className="text-lg font-semibold text-blue-300 mb-2">üìä „Çπ„ÉÜ„Éº„Çø„Çπ</h2>
                  <div className="flex items-center gap-2">
                    <div className={`w-3 h-3 rounded-full ${
                      project.status === 'completed' ? 'bg-green-500' :
                      project.status === 'in-progress' ? 'bg-yellow-500' : 'bg-gray-500'
                    }`}></div>
                    <span>{
                      project.status === 'completed' ? 'ÂÆåÊàê' :
                      project.status === 'in-progress' ? 'ÈñãÁô∫‰∏≠' : 'Ë®àÁîª‰∏≠'
                    }</span>
                  </div>
                </div>

                {project.longDescription && (
                  <div>
                    <h2 className="text-lg font-semibold text-blue-300 mb-2">üìù Ë©≥Á¥∞Ë™¨Êòé</h2>
                    <div className="whitespace-pre-line leading-relaxed text-gray-300">
                      {project.longDescription}
                    </div>
                  </div>
                )}

                <div>
                  <h2 className="text-lg font-semibold text-blue-300 mb-2">üîó „É™„É≥„ÇØ</h2>
                  <div className="flex gap-4">
                    {project.githubUrl && (
                      <a href={project.githubUrl} target="_blank" rel="noopener noreferrer" 
                         className="flex items-center gap-2 text-blue-400 hover:text-blue-300">
                        <Github size={16} />
                        GitHub
                      </a>
                    )}
                    {project.liveUrl && (
                      <a href={project.liveUrl} target="_blank" rel="noopener noreferrer"
                         className="flex items-center gap-2 text-green-400 hover:text-green-300">
                        <Globe size={16} />
                        Live Demo
                      </a>
                    )}
                    {project.articleUrl && (
                      <a href={project.articleUrl} target="_blank" rel="noopener noreferrer"
                         className="flex items-center gap-2 text-purple-400 hover:text-purple-300">
                        <BookOpen size={16} />
                        ÊäÄË°ìË®ò‰∫ã
                      </a>
                    )}
                  </div>
                </div>
              </div>
            </div>
          ),
        },
        {
          id: `${project.id}-package`,
          name: 'package.json',
          type: 'file' as const,
          icon: Package,
          extension: '.json',
          content: (
            <div className="p-6 bg-gray-900 text-gray-300 font-mono text-sm">
              <pre>{JSON.stringify({
                name: project.id,
                version: "1.0.0",
                description: project.description,
                main: "index.js",
                scripts: {
                  dev: "next dev",
                  build: "next build",
                  start: "next start",
                  lint: "eslint ."
                },
                dependencies: project.technologies.reduce((acc, tech) => {
                  const techVersions: Record<string, string> = {
                    'Next.js': '^15.3.3',
                    'React': '^19.0.0',
                    'TypeScript': '^5.0.0',
                    'Tailwind CSS': '^4.0.0',
                    'Framer Motion': '^11.0.0',
                    'shadcn/ui': '^0.8.0',
                    'Discord.js': '^14.0.0',
                    'Hono': '^4.0.0',
                    'Prisma': '^5.0.0',
                    'Supabase': '^2.0.0',
                    'Auth.js': '^5.0.0'
                  };
                  if (techVersions[tech]) {
                    acc[tech.toLowerCase().replace(/[^a-z0-9]/g, '-')] = techVersions[tech];
                  }
                  return acc;
                }, {} as Record<string, string>),
                devDependencies: {
                  "@types/node": "^20.0.0",
                  "@types/react": "^18.0.0",
                  "eslint": "^8.0.0",
                  "eslint-config-next": "15.3.3"
                },
                keywords: project.technologies,
                author: "miyabitti256",
                license: "MIT"
              }, null, 2)}</pre>
            </div>
          ),
        },
        {
          id: `${project.id}-learning`,
          name: 'LEARNING.md',
          type: 'file' as const,
          icon: FileText,
          extension: '.md',
          content: (
            <div className="p-6 text-gray-300 font-zen-maru">
              <h1 className="text-2xl font-bold text-white mb-6">üìö Â≠¶ÁøíË®òÈå≤ - {project.title}</h1>
              
              <div className="space-y-6">
                <div>
                  <h2 className="text-lg font-semibold text-green-300 mb-3">‚ú® ‰∏ª„Å™Â≠¶Áøí„Éù„Ç§„É≥„Éà</h2>
                  <ul className="space-y-2">
                    {project.learnings.map((learning, index) => (
                      <li key={index} className="flex items-start gap-3">
                        <span className="text-green-400 mt-1">‚Ä¢</span>
                        <span>{learning}</span>
                      </li>
                    ))}
                  </ul>
                </div>

                <div>
                  <h2 className="text-lg font-semibold text-yellow-300 mb-3">üéØ ÊäÄË°ìÁöÑ„Éè„Ç§„É©„Ç§„Éà</h2>
                  <ul className="space-y-2">
                    {project.highlights.map((highlight, index) => (
                      <li key={index} className="flex items-start gap-3">
                        <span className="text-yellow-400 mt-1">‚òÖ</span>
                        <span>{highlight}</span>
                      </li>
                    ))}
                  </ul>
                </div>

                <div>
                  <h2 className="text-lg font-semibold text-red-300 mb-3">üöß Ë™≤È°å„ÉªÂõ∞Èõ£ÁÇπ</h2>
                  <ul className="space-y-2">
                    {project.challenges.map((challenge, index) => (
                      <li key={index} className="flex items-start gap-3">
                        <span className="text-red-400 mt-1">‚ö†</span>
                        <span>{challenge}</span>
                      </li>
                    ))}
                  </ul>
                </div>

                {project.architecture && (
                  <div>
                    <h2 className="text-lg font-semibold text-purple-300 mb-3">üèóÔ∏è „Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£</h2>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      {project.architecture.frontend && (
                        <div className="bg-gray-800 p-4 rounded">
                          <h3 className="font-semibold text-blue-300 mb-2">Frontend</h3>
                          <ul className="space-y-1 text-sm">
                            {project.architecture.frontend.map((item, index) => (
                              <li key={index}>‚Ä¢ {item}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                      {project.architecture.backend && (
                        <div className="bg-gray-800 p-4 rounded">
                          <h3 className="font-semibold text-green-300 mb-2">Backend</h3>
                          <ul className="space-y-1 text-sm">
                            {project.architecture.backend.map((item, index) => (
                              <li key={index}>‚Ä¢ {item}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                      {project.architecture.database && (
                        <div className="bg-gray-800 p-4 rounded">
                          <h3 className="font-semibold text-yellow-300 mb-2">Database</h3>
                          <ul className="space-y-1 text-sm">
                            {project.architecture.database.map((item, index) => (
                              <li key={index}>‚Ä¢ {item}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                      {project.architecture.deployment && (
                        <div className="bg-gray-800 p-4 rounded">
                          <h3 className="font-semibold text-purple-300 mb-2">Deployment</h3>
                          <ul className="space-y-1 text-sm">
                            {project.architecture.deployment.map((item, index) => (
                              <li key={index}>‚Ä¢ {item}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                    </div>
                  </div>
                )}

                <div className="border-t border-gray-700 pt-4 mt-6">
                  <p className="text-sm text-gray-400">
                    ÈñãÁô∫ÊúüÈñì: {project.startDate} „Äú {project.endDate || 'ÈÄ≤Ë°å‰∏≠'}
                  </p>
                  <p className="text-sm text-gray-400 mt-1">
                    „Ç´„ÉÜ„Ç¥„É™: {project.category}
                  </p>
                </div>
              </div>
            </div>
          ),
        },
        ...(project.id === 'portfolio-site' ? [{
          id: `${project.id}-structure`,
          name: '„Éï„Ç©„É´„ÉÄÊßãÈÄ†.md',
          type: 'file' as const,
          icon: FileText,
          extension: '.md',
          content: (
            <div className="p-6 text-gray-300 font-zen-maru">
              <h1 className="text-2xl font-bold text-white mb-6">üìÅ Portfolio Site - „Éï„Ç©„É´„ÉÄÊßãÈÄ†</h1>
              
              <div className="bg-gray-900 p-4 rounded-lg font-mono text-sm overflow-x-auto">
                <pre className="text-gray-300">
{`portfolio/
‚îú‚îÄ‚îÄ üìÅ src/
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ app/                    # Next.js App Router
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ @modal/            # üîÄ Parallel Routes
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ (.)profile/    # üéØ Intercepting Routes
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ (.)projects/   # üéØ Intercepting Routes  
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ default.tsx       # „Éá„Éï„Ç©„É´„ÉàUI
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ articles/          # „Éñ„É≠„Ç∞Ê©üËÉΩ
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ [slug]/        # ÂãïÁöÑ„É´„Éº„Éà
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ page.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ profile/           # „Éó„É≠„Éï„Ç£„Éº„É´Ë©≥Á¥∞
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ projects/          # „Éó„É≠„Ç∏„Çß„ÇØ„ÉàË©≥Á¥∞
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ üìÅ [id]/          # ÂãïÁöÑ„É´„Éº„Éà
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ layout.tsx            # „É´„Éº„Éà„É¨„Ç§„Ç¢„Ç¶„Éà
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ page.tsx              # „Éõ„Éº„É†„Éö„Éº„Ç∏
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ globals.css           # „Ç∞„É≠„Éº„Éê„É´„Çπ„Çø„Ç§„É´
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ components/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ animations/        # üé¨ Framer Motion
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ PageTransition.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ engineer-ui/       # üë®‚Äçüíª „Ç®„É≥„Ç∏„Éã„Ç¢ÊÑü„ÅÆ„ÅÇ„ÇãUI
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ VSCodeEditor.tsx  # VS CodeÈ¢®„Ç®„Éá„Ç£„Çø
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ layout/            # „É¨„Ç§„Ç¢„Ç¶„ÉàÈñ¢ÈÄ£
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Footer.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ modals/            # „É¢„Éº„ÉÄ„É´Èñ¢ÈÄ£
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ ProfileContent.tsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ProjectDetailContent.tsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ sections/          # „Éö„Éº„Ç∏„Çª„ÇØ„Ç∑„Éß„É≥
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ HeroSection.tsx   # üéØ „É°„Ç§„É≥„Éì„Ç∏„É•„Ç¢„É´
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ AboutSection.tsx  # Ëá™Â∑±Á¥π‰ªã
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ SkillsSection.tsx # „Çπ„Ç≠„É´Ë°®Á§∫
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ ProjectsSection.tsx # „Éó„É≠„Ç∏„Çß„ÇØ„ÉàÁ¥π‰ªã
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ BlogSection.tsx   # „Éñ„É≠„Ç∞‰∏ÄË¶ß
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ContactSection.tsx # „ÅäÂïè„ÅÑÂêà„Çè„Åõ
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ üìÅ ui/                # shadcn/ui + „Ç´„Çπ„Çø„É†
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ button.tsx
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ card.tsx
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ badge.tsx
‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ social-icons.tsx  # SNS„Ç¢„Ç§„Ç≥„É≥
‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ tech-icons.tsx    # ÊäÄË°ì„Ç¢„Ç§„Ç≥„É≥
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ data/                  # ÈùôÁöÑ„Éá„Éº„Çø
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ personal.ts           # ÂÄã‰∫∫ÊÉÖÂ†±
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ projects.ts           # „Éó„É≠„Ç∏„Çß„ÇØ„ÉàÊÉÖÂ†±
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ skills.ts             # „Çπ„Ç≠„É´ÊÉÖÂ†±
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ animations.ts         # „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ÂÆöÁæ©
‚îÇ   ‚îî‚îÄ‚îÄ üìÅ lib/                   # „É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£
‚îÇ       ‚îú‚îÄ‚îÄ utils.ts              # Ê±éÁî®Èñ¢Êï∞
‚îÇ       ‚îú‚îÄ‚îÄ constants.ts          # ÂÆöÊï∞ÂÆöÁæ©
‚îÇ       ‚îú‚îÄ‚îÄ types.ts              # ÂûãÂÆöÁæ©
‚îÇ       ‚îú‚îÄ‚îÄ articles.ts           # Ë®ò‰∫ãÈñ¢ÈÄ£
‚îÇ       ‚îî‚îÄ‚îÄ new-articles.ts       # Ë®ò‰∫ã‰ΩúÊàê
‚îú‚îÄ‚îÄ üìÅ public/                    # ÈùôÁöÑ„Éï„Ç°„Ç§„É´
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ articles/              # MarkdownË®ò‰∫ã
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ discord-bot-development.md
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ nextjs-learning-journey.md
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ test.md
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ images/                # ÁîªÂÉè„Éï„Ç°„Ç§„É´
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ üìÅ projects/          # „Éó„É≠„Ç∏„Çß„ÇØ„ÉàÁîªÂÉè
‚îÇ   ‚îî‚îÄ‚îÄ üìÅ icons/                 # „Ç¢„Ç§„Ç≥„É≥
‚îú‚îÄ‚îÄ üìÑ package.json               # ‰æùÂ≠òÈñ¢‰øÇ
‚îú‚îÄ‚îÄ üìÑ next.config.ts             # Next.jsË®≠ÂÆö
‚îú‚îÄ‚îÄ üìÑ tailwind.config.ts         # TailwindË®≠ÂÆö
‚îú‚îÄ‚îÄ üìÑ tsconfig.json              # TypeScriptË®≠ÂÆö
‚îî‚îÄ‚îÄ üìÑ bun.lock                   # „Éë„ÉÉ„Ç±„Éº„Ç∏„É≠„ÉÉ„ÇØ

üîß ‰∏ªË¶ÅÊäÄË°ìÊßãÊàê:
‚îú‚îÄ‚îÄ ‚öõÔ∏è  Next.js 15.3.3 (App Router)
‚îú‚îÄ‚îÄ ‚öõÔ∏è  React 19
‚îú‚îÄ‚îÄ üî∑ TypeScript 5
‚îú‚îÄ‚îÄ üé® Tailwind CSS 4  
‚îú‚îÄ‚îÄ üé¨ Framer Motion („Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥)
‚îú‚îÄ‚îÄ üéØ shadcn/ui (UI„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà)
‚îú‚îÄ‚îÄ üì¶ Bun („Éë„ÉÉ„Ç±„Éº„Ç∏„Éû„Éç„Éº„Ç∏„É£„Éº)
‚îî‚îÄ‚îÄ üöÄ Vercel („Éá„Éó„É≠„Ç§)

üí° ÁâπÊÆäÊ©üËÉΩ:
‚îú‚îÄ‚îÄ üîÄ Parallel Routes „Åß„É¢„Éº„ÉÄ„É´ÂÆüË£Ö
‚îú‚îÄ‚îÄ üéØ Intercepting Routes „Åß„Éó„É≠„Ç∏„Çß„ÇØ„ÉàË©≥Á¥∞
‚îú‚îÄ‚îÄ üé¨ „Éö„Éº„Ç∏ÈÅ∑Áßª„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥ (Framer Motion)
‚îú‚îÄ‚îÄ üì± ÂÆåÂÖ®„É¨„Çπ„Éù„É≥„Ç∑„ÉñÂØæÂøú
‚îú‚îÄ‚îÄ üë®‚Äçüíª VS CodeÈ¢®„Éó„É≠„Ç∏„Çß„ÇØ„ÉàË°®Á§∫
‚îú‚îÄ‚îÄ üìù MarkdownË®ò‰∫ã„Ç∑„Çπ„ÉÜ„É†
‚îú‚îÄ‚îÄ ‚ö°Ô∏è Zenn„Çπ„Çø„Ç§„É´CLI (Ë®ò‰∫ã‰ΩúÊàê)
‚îî‚îÄ‚îÄ üé® „Ç®„É≥„Ç∏„Éã„Ç¢ÊÑü„ÅÆ„ÅÇ„Çã„Éá„Ç∂„Ç§„É≥`}
                </pre>
              </div>

              <div className="mt-6 space-y-4">
                <div>
                  <h2 className="text-lg font-semibold text-blue-300 mb-2">üîÄ Parallel Routes „ÅÆÊ¥ªÁî®</h2>
                  <p className="text-gray-300">
                    <code className="bg-gray-800 px-2 py-1 rounded">@modal</code>„Éï„Ç©„É´„ÉÄ„Çí‰Ωø„Å£„Å¶„ÄÅ
                    „É¢„Éº„ÉÄ„É´Ë°®Á§∫„ÇíÂäπÁéáÁöÑ„Å´ÂÆüË£Ö„ÄÇURLÂ§âÊõ¥„Å™„Åó„Åß„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Ç™„Éº„Éê„Éº„É¨„Ç§„ÅåÂèØËÉΩ„ÄÇ
                  </p>
                </div>

                <div>
                  <h2 className="text-lg font-semibold text-green-300 mb-2">üéØ Intercepting Routes</h2>
                  <p className="text-gray-300">
                    <code className="bg-gray-800 px-2 py-1 rounded">(.)profile</code>„ÄÅ
                    <code className="bg-gray-800 px-2 py-1 rounded">(.)projects</code>„Åß
                    Ë©≥Á¥∞„Éö„Éº„Ç∏„Çí„É¢„Éº„ÉÄ„É´„Åß„Ç§„É≥„Çø„Éº„Çª„Éó„Éà„ÄÇUXÂêë‰∏ä„Å®SEO‰∏°Á´ã„ÄÇ
                  </p>
                </div>

                <div>
                  <h2 className="text-lg font-semibold text-purple-300 mb-2">üé¨ „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„Ç∑„Çπ„ÉÜ„É†</h2>
                  <p className="text-gray-300">
                    Framer Motion„ÇíÊ¥ªÁî®„Åó„ÅüÈ´òÂìÅË≥™„Å™„Éö„Éº„Ç∏ÈÅ∑Áßª„Å®„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥„ÄÇ
                    „É¢„Éº„ÉÄ„É´Ë°®Á§∫ÊôÇ„ÅÆÈÅ©Âàá„Å™„Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥Âà∂Âæ°„ÇÇÂÆüË£Ö„ÄÇ
                  </p>
                </div>
              </div>
            </div>
          ),
        }] : [])
      ],
    }));
  };



  return (
    <section id="projects" className="py-20 bg-gradient-to-br from-primary-50 to-primary-100">
      <div className="container mx-auto px-6">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: isVisible ? 1 : 0, y: isVisible ? 0 : 30 }}
          transition={{ duration: 0.6 }}
          className="text-center mb-16"
        >
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4 font-zen-maru">
            Projects
          </h2>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto font-zen-maru">
            „Éï„É´„Çπ„Çø„ÉÉ„ÇØÈñãÁô∫„Çí‰∏≠ÂøÉ„Å®„Åó„ÅüÂÆüË∑µÁöÑ„Å™„Éó„É≠„Ç∏„Çß„ÇØ„Éà
          </p>
        </motion.div>

        {/* VS CodeÈ¢®„Ç®„Éá„Ç£„Çø„Éº */}
        <motion.div
          initial={{ opacity: 0, y: 40 }}
          animate={{ opacity: isVisible ? 1 : 0, y: isVisible ? 0 : 40 }}
          transition={{ duration: 0.6, delay: 0.2 }}
          className="mb-16"
        >
          <div className="h-[70vh] sm:h-[75vh] md:h-[80vh] lg:h-[600px] xl:h-[700px] min-h-[500px]">
            <VSCodeEditor
              projectName="Portfolio Projects"
              files={generateProjectFiles()}
              onTabChange={setCurrentVSCodeTab}
            />
          </div>
        </motion.div>
      </div>
    </section>
  );
} 